{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["bankA","keyCode","key","id","src","src2","App","props","playSound","soundKey","sound","document","getElementById","volume","state","volumeValue","setState","default","currentTime","play","handleClick","index","keyPressed","e","map","keySound","soundId","changeBank","classList","toggle","bankBGreen","changeVolume","barProgress","value","setVolume","getElementsByClassName","addEventListener","this","removeEventListener","className","type","min","max","onInput","onClick","item","srcAudio","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bd9e7d19.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\n\n// allSounds\nconst bankA = [\n  {\n    keyCode: 81,\n    key: \"Q\",\n    id: \"Kick\",\n    src: \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Kicks/53[kb]ec-kik007.wav.mp3\",\n    src2: \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Kicks/152[kb]bigcheeks-kick.wav.mp3\"\n  },\n  {\n    keyCode: 87,\n    key: \"W\",\n    id: \"Snare\",\n    src: \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Snares/61[kb]ec-sn022.wav.mp3\",\n    src2: \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Snares/51[kb]ec-sn016.wav.mp3\"\n  },\n  {\n    keyCode: 69,\n    key: \"E\",\n    id: \"Clap\",\n    src: \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Claps/102[kb]c5.aif.mp3\",\n    src2: \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Claps/86[kb]cleap-real-2-verb2cleap-real.wav.mp3\"\n  },\n  {\n    keyCode: 65,\n    key: \"A\",\n    id: \"Hit Hat\",\n    src: \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Hats/9[kb]ec-hat024.wav.mp3\",\n    src2: \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Hats/23[kb]chh808.aif.mp3\"\n  },\n  {\n    keyCode: 83,\n    key: \"S\",\n    id: \"Clic\",\n    src: \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Tabla/24[kb]ti-ri.aif.mp3\",\n    src2: \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Tabla/24[kb]ti-ri.aif.mp3\"\n  },\n  {\n    keyCode: 68,\n    key: \"D\",\n    id: \"Melodic01\",\n    src: \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Melodic%20Stabs%20and%20Hits/1166[kb]stab-satisfying-4.wav.mp3\",\n    src2: \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Melodic%20Stabs%20and%20Hits/299[kb]one-gentle-epiano-hit.wav.mp3\"\n  },\n  {\n    keyCode: 90,\n    key: \"Z\",\n    id: \"Melodic02\",\n    src: \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Melodic%20Stabs%20and%20Hits/1166[kb]stab-satisfying-12.wav.mp3\",\n    src2: \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Melodic%20Stabs%20and%20Hits/356[kb]one-staggered-epiano-chord-2.wav.mp3\"\n  },\n  {\n    keyCode: 88,\n    key: \"X\",\n    id: \"Melodic03\",\n    src: \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Melodic%20Stabs%20and%20Hits/1166[kb]stab-satisfying-1.wav.mp3\",\n    src2: \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Melodic%20Stabs%20and%20Hits/274[kb]one-staggered-epiano-chord.wav.mp3\"\n  },\n  {\n    keyCode: 67,\n    key: \"C\",\n    id: \"Melodic04\",\n    src: \"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Melodic%20Stabs%20and%20Hits/1166[kb]stab-satisfying-10.wav.mp3\",\n    src2: \"https://sampleswap.org/samples-ghost/VOCALS%20and%20SPOKEN%20WORD/Donald%20Trump%20Construction%20Kit/252[kb]trump-thats-true.wav.mp3\"\n  }\n]\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sound: {},\n      id: '',\n      volumeValue: \"50\",\n      default: '',\n      bankBGreen: false\n    };\n  }\n\n  //handleOnClicked\n  playSound = (soundKey) => {\n    const sound = document.getElementById(soundKey);\n    sound.volume = this.state.volumeValue / 100;\n    this.setState({\n      default: this.state.sound.id\n    })\n    sound.currentTime = 0;\n    sound.play();\n\n  }\n  handleClick = index => {\n    this.setState({\n      ...this.state,\n      sound: bankA[index],\n      id: bankA[index].id\n    });\n    let soundKey = bankA[index].key;\n    this.playSound(soundKey);\n  };\n\n  // handleOnKeyDown\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.keyPressed, false)\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.keyPressed, false)\n  }\n  keyPressed = (e) => {\n    bankA.map(keySound => {\n      if (keySound.keyCode === e.keyCode) {\n        this.setState({\n          ...this.state,\n          sound: keySound,\n          id: keySound.id\n        })\n        let soundId = this.state.sound.key\n        this.playSound(soundId)\n      }\n      return keySound\n    })\n  }\n\n  // handleFeatures\n  changeBank = () => {\n    document.getElementById('a-light').classList.toggle('bank-a');\n    document.getElementById('b-light').classList.toggle('bank-b');\n    this.setState({\n      bankBGreen: !this.state.bankBGreen\n    })\n  }\n  changeVolume = () => {\n    const barProgress = document.getElementById('volume-control');\n    this.setState({\n      volumeValue: barProgress.value,\n      default: this.state.volumeValue\n    })\n  }\n  setVolume = () => {\n    const audioElements = document.getElementsByClassName('clip');\n    audioElements.volume = this.state.volumeValue;\n  }\n\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <div id=\"drum-machine\">\n          <div className=\"row1\">\n\n            <div id=\"display\">\n              <div id=\"display-inside\">\n                <p>\n                  {this.state.default}             \n                </p>\n              </div>\n            </div>\n\n            <div id=\"titre-machine\">\n              <h1>FCC 2020</h1>\n              <div className=\"red-line\"></div>\n              <h2>Drum Machine</h2>\n            </div>\n\n          </div>\n\n\n          <div className=\"row2\">\n\n            <div id=\"main-button-main-volume\">\n              <div id=\"main-volume\">\n                <input type=\"range\" min=\"0\" max=\"100\" onInput={this.changeVolume} id=\"volume-control\" />\n              </div>\n            </div>\n\n\n            <div id=\"main-pad-bank\">\n\n              <div id=\"indicators\">\n                <div id=\"a-indicator\">\n                  A\n                <div className=\"light-indicator\" id=\"a-light\"></div>\n                </div>\n\n                <div id=\"b-incator\">\n                  <div className=\"light-indicator\" id=\"b-light\"></div>\n                 B\n                </div>\n              </div>\n\n              <div id=\"main-button-pad-bank\">\n                PAD BANK\n                <div id=\"button-pad\" onClick={this.changeBank}></div>\n              </div>\n\n            </div>\n\n            <div className=\"main-pad\">\n\n              <div id=\"pad-container\">\n\n                {bankA.map((item, index) => {\n                  // changed bank sounds (when Pad Bank clicked)\n                  const srcAudio = this.state.bankBGreen ?\n                    (<audio className=\"clip\" id={item.key} src={item.src2} />)\n                    : (<audio className=\"clip\" id={item.key} src={item.src} />)\n\n                  return (\n                    <div className=\"drum-pad\"\n                      key={index}\n                      id={item.id}\n                      onClick={() => this.handleClick(index)} >\n                      {srcAudio}\n                      {item.key}\n                    </div>\n                  );\n\n                })}\n\n              </div>\n\n            </div>\n\n          </div>\n\n\n        </div>\n      </div>\n    )\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}